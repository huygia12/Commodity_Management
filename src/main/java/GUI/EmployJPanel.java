/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Models.Employee;
import Models.EmployeeList;
import Models.Shift;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DTuyen16
 */
public class EmployJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EmployJPanel
     */
    public EmployJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderbuttonGroup = new javax.swing.ButtonGroup();
        inputInfoPanel = new javax.swing.JPanel();
        inputFirstNameLabel = new javax.swing.JLabel();
        inputFirstNameTextField = new javax.swing.JTextField();
        inputLastNameLabel = new javax.swing.JLabel();
        inputLastNameTextField1 = new javax.swing.JTextField();
        inputAgeLabel = new javax.swing.JLabel();
        inputAgeTextField = new javax.swing.JTextField();
        inputGenderLabel = new javax.swing.JLabel();
        maleButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        otherRadioButton = new javax.swing.JRadioButton();
        inputPhoneLabel = new javax.swing.JLabel();
        inputPhoneTextField = new javax.swing.JTextField();
        inputAdressLabel = new javax.swing.JLabel();
        inputAdressField = new javax.swing.JTextField();
        inputCCCDLabel = new javax.swing.JLabel();
        inputCCCDTextField = new javax.swing.JTextField();
        inputSalaryLabel = new javax.swing.JLabel();
        inputSalaryTextField = new javax.swing.JTextField();
        functionPanel = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        changeButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        searchIDTextField = new javax.swing.JTextField();
        displayPanel = new javax.swing.JPanel();
        displayScrollPane = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "THÔNG TIN NHÂN VIÊN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18))); // NOI18N
        setPreferredSize(new java.awt.Dimension(970, 560));

        inputFirstNameLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        inputFirstNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputFirstNameLabel.setText("Họ:");
        inputFirstNameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        inputLastNameLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        inputLastNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputLastNameLabel.setText("Tên:");

        inputLastNameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputLastNameTextField1ActionPerformed(evt);
            }
        });

        inputAgeLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        inputAgeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputAgeLabel.setText("Tuổi:");

        inputGenderLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        inputGenderLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputGenderLabel.setText("Giới tính:");

        genderbuttonGroup.add(maleButton);
        maleButton.setText("MALE");
        maleButton.setAutoscrolls(true);

        genderbuttonGroup.add(femaleRadioButton);
        femaleRadioButton.setText("FEMALE");
        femaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleRadioButtonActionPerformed(evt);
            }
        });

        genderbuttonGroup.add(otherRadioButton);
        otherRadioButton.setText("OTHER");

        inputPhoneLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        inputPhoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputPhoneLabel.setText("SĐT:");

        inputAdressLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        inputAdressLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputAdressLabel.setText("Địa chỉ:");

        inputCCCDLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        inputCCCDLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputCCCDLabel.setText("CCCD:");

        inputSalaryLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        inputSalaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputSalaryLabel.setText("Lương:");

        javax.swing.GroupLayout inputInfoPanelLayout = new javax.swing.GroupLayout(inputInfoPanel);
        inputInfoPanel.setLayout(inputInfoPanelLayout);
        inputInfoPanelLayout.setHorizontalGroup(
            inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inputGenderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputLastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputFirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputAgeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(inputLastNameTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(otherRadioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputAgeTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maleButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(femaleRadioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputFirstNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputInfoPanelLayout.createSequentialGroup()
                        .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputAdressLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputCCCDLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputSalaryLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputInfoPanelLayout.createSequentialGroup()
                        .addComponent(inputPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(inputPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(inputAdressField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(inputCCCDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(inputSalaryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        inputInfoPanelLayout.setVerticalGroup(
            inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputInfoPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputInfoPanelLayout.createSequentialGroup()
                        .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputFirstNameLabel)
                            .addComponent(inputFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputPhoneLabel)
                            .addComponent(inputPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputLastNameLabel)
                            .addComponent(inputLastNameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputAdressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputAdressLabel))
                        .addGap(18, 18, 18)
                        .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputAgeLabel)
                            .addComponent(inputAgeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputCCCDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputCCCDLabel))
                        .addGap(18, 18, 18)
                        .addGroup(inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputGenderLabel)
                            .addComponent(maleButton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inputSalaryLabel)
                        .addComponent(inputSalaryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(femaleRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(otherRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        addButton.setText("THÊM");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        changeButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        changeButton.setText("SỬA");
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });

        removeButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        removeButton.setText("XÓA");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        searchButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        searchButton.setText("TÌM KIẾM");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout functionPanelLayout = new javax.swing.GroupLayout(functionPanel);
        functionPanel.setLayout(functionPanelLayout);
        functionPanelLayout.setHorizontalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(functionPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(functionPanelLayout.createSequentialGroup()
                                .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addGroup(functionPanelLayout.createSequentialGroup()
                                .addComponent(searchIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(searchButton))))
                    .addGroup(functionPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(changeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addButton))))
                .addGap(38, 38, 38))
        );
        functionPanelLayout.setVerticalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addButton)
                .addGap(18, 18, 18)
                .addComponent(changeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(removeButton)
                .addGap(75, 75, 75))
        );

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Họ", "Tên", "Tuổi", "Giới tính", "SĐT", "Địa chỉ", "CCCD", "Lương"
            }
        ));
        displayTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayTableMouseClicked(evt);
            }
        });
        displayScrollPane.setViewportView(displayTable);

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 936, Short.MAX_VALUE)
            .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(displayScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 912, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 461, Short.MAX_VALUE)
            .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(displayPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(displayScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inputInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(functionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(functionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void inputLastNameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputLastNameTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputLastNameTextField1ActionPerformed

    private void femaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleRadioButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        String firstName = inputFirstNameTextField.getText();
        String lastName = inputLastNameTextField1.getText();
        int age = 0;
        double salary = 0.0;
        try {
            age = Integer.parseInt(inputAgeTextField.getText());
            salary = Double.parseDouble(inputSalaryTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Age and Salary must be valid numbers.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String address = inputAdressField.getText();
        String cccd = inputCCCDTextField.getText();
        String phone = inputPhoneTextField.getText();
        String gender = "";
        if (maleButton.isSelected()) {
            gender = "Male";
        } else if (femaleRadioButton.isSelected()) {
            gender = "Female";
        } else if (otherRadioButton.isSelected()) {
            gender = "Other";
        } else {
            JOptionPane.showMessageDialog(this, "Please select a gender.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Tạo một đối tượng Employee mới với thông tin được nhập vào
        Employee newEmployee = new Employee(firstName, lastName, age, address, cccd, phone, salary, gender);

        // Lấy môt đối tượng DefaultTableModel của bảng hiển thị và thêm một hàng mới vào bảng với thông tin của đối tượng Employee
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        model.addRow(new Object[]{newEmployee.getFirstName(), newEmployee.getLastName(), newEmployee.getAge(), newEmployee.getAddress(), newEmployee.getCCCD(), newEmployee.getPhoneNumber(), newEmployee.getSalaryPerDay(), newEmployee.getGender()});

        // Xóa các trường nhập để chuẩn bị cho việc nhập thông tin nhân viên tiếp theo
        inputFirstNameTextField.setText("");
        inputLastNameTextField1.setText("");
        inputAgeTextField.setText("");
        inputAdressField.setText("");
        inputCCCDTextField.setText("");
        inputPhoneTextField.setText("");
        inputSalaryTextField.setText("");
        genderbuttonGroup.clearSelection();
    }//GEN-LAST:event_addButtonActionPerformed

    private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
        // TODO add your handling code here:
        // Lấy chỉ số của hàng được chọn trong bảng
        int rowIndex = displayTable.getSelectedRow();

        // Kiểm tra xem một hàng đã được chọn hay chưa
        if (rowIndex >= 0) {
            // Lấy DefaultTableModel của bảng
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();

            // Lấy các giá trị của hàng được chọn
            String firstName = model.getValueAt(rowIndex, 0).toString();
            String lastName = model.getValueAt(rowIndex, 1).toString();
            int age = Integer.parseInt(model.getValueAt(rowIndex, 2).toString());
            String address = model.getValueAt(rowIndex, 3).toString();
            String cccd = model.getValueAt(rowIndex, 4).toString();
            String phone = model.getValueAt(rowIndex, 5).toString();
            double salary = Double.parseDouble(model.getValueAt(rowIndex, 6).toString());
            String gender = model.getValueAt(rowIndex, 7).toString();

            // Cập nhật các giá trị của nhân viên với các giá trị mới được nhập từ các trường nhập liệu
            firstName = inputFirstNameTextField.getText();
            lastName = inputLastNameTextField1.getText();
            age = Integer.parseInt(inputAgeTextField.getText());
            address = inputAdressField.getText();
            cccd = inputCCCDTextField.getText();
            phone = inputPhoneTextField.getText();
            salary = Double.parseDouble(inputSalaryTextField.getText());
            gender = maleButton.isSelected() ? "Male" : femaleRadioButton.isSelected() ? "Female" : "Other";

            // Cập nhật các giá trị của hàng được chọn trong bảng với các giá trị mới
            model.setValueAt(firstName, rowIndex, 0);
            model.setValueAt(lastName, rowIndex, 1);
            model.setValueAt(age, rowIndex, 2);
            model.setValueAt(address, rowIndex, 3);
            model.setValueAt(cccd, rowIndex, 4);
            model.setValueAt(phone, rowIndex, 5);
            model.setValueAt(salary, rowIndex, 6);
            model.setValueAt(gender, rowIndex, 7);

            // Hiển thị thông báo cho người dùng để thông báo rằng thông tin nhân viên đã được cập nhật thành công
            JOptionPane.showMessageDialog(this, "Thông tin nhân viên đã được cập nhật thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Nếu không có hàng nào được chọn, hiển thị một thông báo cho người dùng
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một hàng để cập nhật thông tin!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_changeButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        int selectedRowIndex = displayTable.getSelectedRow();
        if (selectedRowIndex >= 0) {
            // Xóa dòng được chọn trong bảng
            model.removeRow(selectedRowIndex);
            // Lưu lại các thay đổi
            model.fireTableDataChanged();
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void displayTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayTableMouseClicked
        // TODO add your handling code here:
        // Lấy chỉ số của hàng được chọn trong bảng
        int rowIndex = displayTable.getSelectedRow();

        // Kiểm tra xem một hàng đã được chọn hay chưa
        if (rowIndex >= 0) {
            // Lấy DefaultTableModel của bảng
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();

            // Lấy các giá trị của hàng được chọn
            String firstName = model.getValueAt(rowIndex, 0) != null ? model.getValueAt(rowIndex, 0).toString() : "";
            String lastName = model.getValueAt(rowIndex, 1) != null ? model.getValueAt(rowIndex, 1).toString() : "";
            String age = model.getValueAt(rowIndex, 2) != null ? model.getValueAt(rowIndex, 2).toString() : "";
            String address = model.getValueAt(rowIndex, 3) != null ? model.getValueAt(rowIndex, 3).toString() : "";
            String cccd = model.getValueAt(rowIndex, 4) != null ? model.getValueAt(rowIndex, 4).toString() : "";
            String phone = model.getValueAt(rowIndex, 5) != null ? model.getValueAt(rowIndex, 5).toString() : "";
            String salary = model.getValueAt(rowIndex, 6) != null ? model.getValueAt(rowIndex, 6).toString() : "";
            String gender = model.getValueAt(rowIndex, 7) != null ? model.getValueAt(rowIndex, 7).toString() : "";

            // Cập nhật các trường nhập liệu với các giá trị của nhân viên được chọn
            inputFirstNameTextField.setText(firstName);
            inputLastNameTextField1.setText(lastName);
            inputAgeTextField.setText(age);
            inputAdressField.setText(address);
            inputCCCDTextField.setText(cccd);
            inputPhoneTextField.setText(phone);
            inputSalaryTextField.setText(salary);

            // Kiểm tra nút radio giới tính tương ứng với giới tính của nhân viên được chọn
            if (gender.equals("Male")) {
                maleButton.setSelected(true);
            } else if (gender.equals("Female")) {
                femaleRadioButton.setSelected(true);
            } else if (gender.equals("Other")) {
                otherRadioButton.setSelected(true);
            }
        }
    }//GEN-LAST:event_displayTableMouseClicked

    public void passData(EmployeeList employeelist, Shift shift) {
        this.employeelist = employeelist;
        this.shift = shift;
    }
    private ArrayList<Employee> employees;
    private EmployeeList employeelist;
    private Shift shift;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton changeButton;
    private javax.swing.JPanel displayPanel;
    private javax.swing.JScrollPane displayScrollPane;
    private javax.swing.JTable displayTable;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JPanel functionPanel;
    private javax.swing.ButtonGroup genderbuttonGroup;
    private javax.swing.JTextField inputAdressField;
    private javax.swing.JLabel inputAdressLabel;
    private javax.swing.JLabel inputAgeLabel;
    private javax.swing.JTextField inputAgeTextField;
    private javax.swing.JLabel inputCCCDLabel;
    private javax.swing.JTextField inputCCCDTextField;
    private javax.swing.JLabel inputFirstNameLabel;
    private javax.swing.JTextField inputFirstNameTextField;
    private javax.swing.JLabel inputGenderLabel;
    private javax.swing.JPanel inputInfoPanel;
    private javax.swing.JLabel inputLastNameLabel;
    private javax.swing.JTextField inputLastNameTextField1;
    private javax.swing.JLabel inputPhoneLabel;
    private javax.swing.JTextField inputPhoneTextField;
    private javax.swing.JLabel inputSalaryLabel;
    private javax.swing.JTextField inputSalaryTextField;
    private javax.swing.JRadioButton maleButton;
    private javax.swing.JRadioButton otherRadioButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchIDTextField;
    // End of variables declaration//GEN-END:variables
}
