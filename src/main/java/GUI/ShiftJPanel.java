/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Controllers.GoodsController;
import Controllers.OrderController;
import Controllers.ShiftController;
import Models.EmployeeList;
import Models.Goods;
import Models.GoodsList;
import Models.History;
import Models.Order;
import Models.Shift;
import Models.Shipment;
import Models.Store;
import Ultility.IDGenerator;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ScrollPaneConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FPTSHOP
 */
public class ShiftJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ShiftJPanel
     */
    public ShiftJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        overViewPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        shiftInforPanel = new javax.swing.JPanel();
        shiftIDLabel = new javax.swing.JLabel();
        shiftIDTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        dateTextField = new javax.swing.JFormattedTextField();
        timeTextField = new javax.swing.JFormattedTextField();
        shiftDetailPanel = new javax.swing.JPanel();
        ordersAndShipsHistoryPanel = new javax.swing.JPanel();
        orderAndShipsFlowBtn = new javax.swing.JPanel();
        switchToOrderHistoryBtn = new javax.swing.JButton();
        switchToShipmentHistoryBtn = new javax.swing.JButton();
        searchAndTablePanel = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        orderIDLabel = new javax.swing.JLabel();
        orderIDTextField = new javax.swing.JTextField();
        cashierPhoneNumLable = new javax.swing.JLabel();
        cashierPhoneNumTextField = new javax.swing.JTextField();
        fromLabel = new javax.swing.JLabel();
        fromTextField = new javax.swing.JTextField();
        toTextField = new javax.swing.JTextField();
        toLabel = new javax.swing.JLabel();
        refreashBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        overViewTableJScrollPane = new javax.swing.JScrollPane();
        overViewTable = new javax.swing.JTable();
        otherFunctionPanel = new javax.swing.JPanel();
        openBalanceTextField = new javax.swing.JPanel();
        openBalanceLabel = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        surchargeLabel = new javax.swing.JLabel();
        shiftEmployeeListLabel = new javax.swing.JLabel();
        surchargeTextField = new javax.swing.JTextField();
        shiftEmployeeListComboBox = new javax.swing.JComboBox<>();
        cashierShiftLabel = new javax.swing.JLabel();
        cashierShiftComboBox = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        grossRevenueLabel = new javax.swing.JLabel();
        netRevenueLabel = new javax.swing.JLabel();
        taxShiftLabel = new javax.swing.JLabel();
        taxShiftTextField = new javax.swing.JTextField();
        numberOfOrderLabel = new javax.swing.JLabel();
        averagePerOrderLabel = new javax.swing.JLabel();
        intoShiftDetailBtn = new javax.swing.JButton();
        numberOfOrderTextField = new javax.swing.JTextField();
        averagePerOrderTextField = new javax.swing.JTextField();
        netRevenueTextField = new javax.swing.JTextField();
        grossRevenueTextField = new javax.swing.JTextField();
        endShiftBtn = new javax.swing.JButton();
        displayDetailJScrollPane = new javax.swing.JScrollPane();
        displayDetailTable = new javax.swing.JTable();

        javax.swing.GroupLayout overViewPanelLayout = new javax.swing.GroupLayout(overViewPanel);
        overViewPanel.setLayout(overViewPanelLayout);
        overViewPanelLayout.setHorizontalGroup(
            overViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        overViewPanelLayout.setVerticalGroup(
            overViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setLayout(new java.awt.BorderLayout());

        shiftInforPanel.setBackground(new java.awt.Color(255, 255, 255));
        shiftInforPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(51, 51, 51), new java.awt.Color(204, 204, 204), new java.awt.Color(51, 51, 51)));
        shiftInforPanel.setOpaque(false);
        shiftInforPanel.setPreferredSize(new java.awt.Dimension(965, 25));

        shiftIDLabel.setFont(new java.awt.Font("MTO Telephone", 1, 16)); // NOI18N
        shiftIDLabel.setText("MÃ CA HIỆN TẠI : ");

        shiftIDTextField.setEditable(false);
        shiftIDTextField.setBackground(new java.awt.Color(255, 255, 255));
        shiftIDTextField.setFont(new java.awt.Font("MTO Telephone", 0, 16)); // NOI18N
        shiftIDTextField.setBorder(null);
        shiftIDTextField.setMinimumSize(new java.awt.Dimension(64, 20));
        shiftIDTextField.setPreferredSize(new java.awt.Dimension(64, 20));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        dateLabel.setFont(new java.awt.Font("MTO Telephone", 1, 14)); // NOI18N
        dateLabel.setText("Ngày lập:");
        dateLabel.setMinimumSize(new java.awt.Dimension(73, 20));
        dateLabel.setPreferredSize(new java.awt.Dimension(73, 20));

        timeLabel.setFont(new java.awt.Font("MTO Telephone", 1, 14)); // NOI18N
        timeLabel.setText("Giờ :");
        timeLabel.setMinimumSize(new java.awt.Dimension(34, 20));
        timeLabel.setPreferredSize(new java.awt.Dimension(34, 20));

        dateTextField.setBorder(null);
        dateTextField.setFont(new java.awt.Font("MTO Telephone", 0, 14)); // NOI18N
        dateTextField.setPreferredSize(new java.awt.Dimension(126, 20));

        timeTextField.setBorder(null);
        timeTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance())));
        timeTextField.setFont(new java.awt.Font("MTO Telephone", 0, 14)); // NOI18N
        timeTextField.setPreferredSize(new java.awt.Dimension(126, 20));

        javax.swing.GroupLayout shiftInforPanelLayout = new javax.swing.GroupLayout(shiftInforPanel);
        shiftInforPanel.setLayout(shiftInforPanelLayout);
        shiftInforPanelLayout.setHorizontalGroup(
            shiftInforPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shiftInforPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(shiftIDLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shiftIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 263, Short.MAX_VALUE)
                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        shiftInforPanelLayout.setVerticalGroup(
            shiftInforPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shiftInforPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(shiftInforPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(shiftInforPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(shiftInforPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shiftInforPanelLayout.createSequentialGroup()
                            .addComponent(shiftIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, Short.MAX_VALUE)
                            .addGap(8, 8, 8))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3))
            .addGroup(shiftInforPanelLayout.createSequentialGroup()
                .addGroup(shiftInforPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(shiftInforPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(shiftIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        add(shiftInforPanel, java.awt.BorderLayout.PAGE_START);

        shiftDetailPanel.setLayout(new java.awt.BorderLayout(10, 0));

        ordersAndShipsHistoryPanel.setPreferredSize(new java.awt.Dimension(350, 595));
        ordersAndShipsHistoryPanel.setLayout(new java.awt.BorderLayout(10, 0));

        orderAndShipsFlowBtn.setPreferredSize(new java.awt.Dimension(350, 34));

        switchToOrderHistoryBtn.setText("Lịch sử hóa đơn");
        switchToOrderHistoryBtn.setMaximumSize(new java.awt.Dimension(200, 23));
        switchToOrderHistoryBtn.setPreferredSize(new java.awt.Dimension(150, 23));
        switchToOrderHistoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchToOrderHistoryBtnActionPerformed(evt);
            }
        });
        orderAndShipsFlowBtn.add(switchToOrderHistoryBtn);

        switchToShipmentHistoryBtn.setText("Lịch sử nhập hàng");
        switchToShipmentHistoryBtn.setMaximumSize(new java.awt.Dimension(200, 23));
        switchToShipmentHistoryBtn.setPreferredSize(new java.awt.Dimension(150, 23));
        orderAndShipsFlowBtn.add(switchToShipmentHistoryBtn);

        ordersAndShipsHistoryPanel.add(orderAndShipsFlowBtn, java.awt.BorderLayout.PAGE_START);

        searchAndTablePanel.setPreferredSize(new java.awt.Dimension(350, 562));
        searchAndTablePanel.setLayout(new java.awt.BorderLayout(0, 10));

        searchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm Kiếm"));
        searchPanel.setPreferredSize(new java.awt.Dimension(350, 200));

        orderIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        orderIDLabel.setText("Mã HD: ");

        orderIDTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        orderIDTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cashierPhoneNumLable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cashierPhoneNumLable.setText("SĐT Thu Ngân:");

        cashierPhoneNumTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        fromLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fromLabel.setText("Từ :");

        fromTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        toTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        toLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        toLabel.setText("Đến :");

        refreashBtn.setBackground(new java.awt.Color(0, 0, 0));
        refreashBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        refreashBtn.setForeground(new java.awt.Color(255, 255, 255));
        refreashBtn.setText("Làm Mới");

        searchBtn.setBackground(new java.awt.Color(0, 255, 0));
        searchBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchBtn.setText("Tìm Kiếm");

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addComponent(fromLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(searchBtn)))
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(toLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(toTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(refreashBtn)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderIDLabel)
                            .addComponent(cashierPhoneNumLable))
                        .addGap(26, 26, 26)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(orderIDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(cashierPhoneNumTextField))
                        .addContainerGap(81, Short.MAX_VALUE))))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderIDLabel))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashierPhoneNumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cashierPhoneNumLable))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromLabel)
                    .addComponent(toLabel)
                    .addComponent(toTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchBtn)
                    .addComponent(refreashBtn))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        searchAndTablePanel.add(searchPanel, java.awt.BorderLayout.PAGE_START);

        overViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HD", "Thời Gian Lập", "Tổng Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        overViewTable.setFocusable(false);
        overViewTable.setPreferredSize(new java.awt.Dimension(350, 80));
        overViewTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                overViewTableMouseClicked(evt);
            }
        });
        overViewTableJScrollPane.setViewportView(overViewTable);

        searchAndTablePanel.add(overViewTableJScrollPane, java.awt.BorderLayout.CENTER);

        ordersAndShipsHistoryPanel.add(searchAndTablePanel, java.awt.BorderLayout.CENTER);

        shiftDetailPanel.add(ordersAndShipsHistoryPanel, java.awt.BorderLayout.LINE_START);

        otherFunctionPanel.setLayout(new java.awt.BorderLayout(0, 10));

        openBalanceTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Tổng quan ca làm việc"));
        openBalanceTextField.setPreferredSize(new java.awt.Dimension(617, 234));

        openBalanceLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        openBalanceLabel.setText("Nhập Số Dư Đầu Ca : ");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        surchargeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        surchargeLabel.setText("Chi Tiêu Trong Ca : ");

        shiftEmployeeListLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        shiftEmployeeListLabel.setText("Nhân Viên Trực Ca:");

        surchargeTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        surchargeTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        shiftEmployeeListComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        cashierShiftLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cashierShiftLabel.setText("Thu Ngân Ca:");

        cashierShiftComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        grossRevenueLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        grossRevenueLabel.setText("Doanh Thu Hiện Tại: ");

        netRevenueLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        netRevenueLabel.setText("Lợi Nhuận Ròng:");

        taxShiftLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        taxShiftLabel.setText("Thuế(VAT-%):");

        taxShiftTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        taxShiftTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        numberOfOrderLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numberOfOrderLabel.setText("Tổng Số Hóa Đơn:");

        averagePerOrderLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        averagePerOrderLabel.setText("Trung Bình/HD:");

        intoShiftDetailBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        intoShiftDetailBtn.setText("Xem Chi Tiết");
        intoShiftDetailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intoShiftDetailBtnActionPerformed(evt);
            }
        });

        numberOfOrderTextField.setEditable(false);
        numberOfOrderTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numberOfOrderTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        averagePerOrderTextField.setEditable(false);
        averagePerOrderTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        averagePerOrderTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        netRevenueTextField.setEditable(false);
        netRevenueTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        netRevenueTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        grossRevenueTextField.setEditable(false);
        grossRevenueTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        grossRevenueTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        grossRevenueTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grossRevenueTextFieldActionPerformed(evt);
            }
        });

        endShiftBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        endShiftBtn.setText("Chốt Ca");
        endShiftBtn.setPreferredSize(new java.awt.Dimension(107, 27));

        javax.swing.GroupLayout openBalanceTextFieldLayout = new javax.swing.GroupLayout(openBalanceTextField);
        openBalanceTextField.setLayout(openBalanceTextFieldLayout);
        openBalanceTextFieldLayout.setHorizontalGroup(
            openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openBalanceTextFieldLayout.createSequentialGroup()
                .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(openBalanceTextFieldLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(openBalanceLabel)
                            .addComponent(surchargeLabel)
                            .addComponent(shiftEmployeeListLabel)
                            .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(taxShiftLabel)
                                .addComponent(cashierShiftLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(surchargeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(shiftEmployeeListComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cashierShiftComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(openBalanceTextFieldLayout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(taxShiftTextField)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(openBalanceTextFieldLayout.createSequentialGroup()
                        .addComponent(numberOfOrderLabel)
                        .addGap(28, 28, 28)
                        .addComponent(numberOfOrderTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                    .addGroup(openBalanceTextFieldLayout.createSequentialGroup()
                        .addComponent(averagePerOrderLabel)
                        .addGap(46, 46, 46)
                        .addComponent(averagePerOrderTextField))
                    .addGroup(openBalanceTextFieldLayout.createSequentialGroup()
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(grossRevenueLabel)
                            .addComponent(netRevenueLabel))
                        .addGap(11, 11, 11)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(grossRevenueTextField)
                            .addComponent(netRevenueTextField)))
                    .addGroup(openBalanceTextFieldLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(intoShiftDetailBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(endShiftBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap())
        );
        openBalanceTextFieldLayout.setVerticalGroup(
            openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(openBalanceTextFieldLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(openBalanceTextFieldLayout.createSequentialGroup()
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberOfOrderLabel)
                            .addComponent(numberOfOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(averagePerOrderLabel)
                            .addComponent(averagePerOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grossRevenueLabel)
                            .addComponent(grossRevenueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(netRevenueLabel)
                            .addComponent(netRevenueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(intoShiftDetailBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(endShiftBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(openBalanceTextFieldLayout.createSequentialGroup()
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(openBalanceLabel)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(surchargeLabel)
                            .addComponent(surchargeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shiftEmployeeListLabel)
                            .addComponent(shiftEmployeeListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cashierShiftLabel)
                            .addComponent(cashierShiftComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(openBalanceTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(taxShiftLabel)
                            .addComponent(taxShiftTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        otherFunctionPanel.add(openBalanceTextField, java.awt.BorderLayout.PAGE_START);

        displayDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "ĐV", "Đơn Giá/ĐV", "Tổng SL", "Mã Lô", "SL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayDetailJScrollPane.setViewportView(displayDetailTable);

        otherFunctionPanel.add(displayDetailJScrollPane, java.awt.BorderLayout.CENTER);

        shiftDetailPanel.add(otherFunctionPanel, java.awt.BorderLayout.CENTER);

        add(shiftDetailPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void switchToOrderHistoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchToOrderHistoryBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_switchToOrderHistoryBtnActionPerformed

    private void grossRevenueTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grossRevenueTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grossRevenueTextFieldActionPerformed

    private void intoShiftDetailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intoShiftDetailBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_intoShiftDetailBtnActionPerformed

    private void overViewTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_overViewTableMouseClicked
        int selectedRow = overViewTable.getSelectedRow();
        if(selectedRow != -1){
            String orderID = overViewTable.getValueAt(selectedRow, 0).toString();
            Order selectedOrder = shiftCtr.containOrder(shift.getOrderHisPerShift(), orderID);
            insertorderGoodsListToDisplayDetailTable(selectedOrder);
        }
    }//GEN-LAST:event_overViewTableMouseClicked

    private void insertorderGoodsListToDisplayDetailTable(Order order) {
        clearTableModel(overViewModel);
        for (Goods goods : order.getList()) {
            int size = goods.getShipments().size();
            for (int i = 0; i < size; i++) {
                Shipment shipment = goods.getShipments().get(i);
                if (i == 0) {
                    insertNewOrderGoodsToDisplayDetailTable(goods, shipment);
                } else {
                    insertExistedOrderGoodsToDisplayDetailTable(shipment);
                }
            }
        }
    }

    private void insertNewOrderGoodsToDisplayDetailTable(Goods goods, Shipment shipment){
        displayDetailModel.addRow(new Object[]{
            goods.getID(),
            goods.getGoodsName(),
            goods.getUnit(),
            goods.getListPrice(),
            goods.getTotalQuantity(),
            shipment.getID(),
            shipment.getQuantity()
        });
    }
    
    private void insertExistedOrderGoodsToDisplayDetailTable(Shipment shipment) {
        displayDetailModel.addRow(new Object[]{
            "",
            "",
            "",
            "",
            "",
            shipment.getID(),
            shipment.getQuantity()
        });
    }
    
    private void insertOrderHistoryToOverViewTable(List<Order> orderHistory) {
        clearTableModel(overViewModel);
        for (Order order : orderHistory) {
            insertNewOrderToOverViewTable(order);
        }
    }

    private void insertNewOrderToOverViewTable(Order order){
        overViewModel.addRow(new Object[]{
            order.getID(),
            order.getOrderDateTime(),
            orderCtr.getTotal(order, myStore)
        });
    }
    
    private void clearTableModel(DefaultTableModel tableModel) {
        int numberOfRow = tableModel.getRowCount();
        for (int i = 0; i < numberOfRow; i++) {
            tableModel.removeRow(0);
        }
    }
    
//    private<T extends Goods> void computeSizeEachColumn(GoodsList<T> myGoodsList) {
//        // duyet tu dau den cuoi mang de tim MAX_SIZE cua giatri input tung thuoc tinh
//        for (T goods : myGoodsList.getList()) {
//            if (goods.getGoodsName().length() > nameMaxSize) {
//                nameMaxSize = goods.getGoodsName().length();
//            }
//            if (goods.getManufacture().length() > providerMaxSize) {
//                providerMaxSize = goods.getManufacture().length();
//            }
//            if (String.format(".1f", goods.getListPrice()).length() > listPriceMaxSize) {
//                listPriceMaxSize = String.format(".1f", goods.getListPrice()).length();
//            }
//            if (String.format(".1f", goodsCtr.getTotalQuanByShipments(goods)).length() > totalQuantityMaxSize) {
//                totalQuantityMaxSize = String.format(".1f", goodsCtr.getTotalQuanByShipments(goods)).length();
//            }
//            for (Shipment shipment : goods.getShipments()) {
//                if (String.format(".1f", shipment.getImportPrice()).length() > importPriceMaxSize) {
//                    importPriceMaxSize = String.format(".1f", shipment.getImportPrice()).length();
//                }
//                if (String.format(".1f", shipment.getQuantity()).length() > quantityMaxSize) {
//                    quantityMaxSize = String.format(".1f", shipment.getQuantity()).length();
//                }
//            }
//        }
//    }
    
    private void initVariables() {
        realTimeClock();
        overViewTableJScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        overViewTableJScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        displayDetailJScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        displayDetailJScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        overViewModel = (DefaultTableModel)overViewTable.getModel();
        displayDetailModel = (DefaultTableModel)displayDetailTable.getModel();
        orderCtr = new OrderController();
        shiftCtr = new ShiftController();
        insertOrderHistoryToOverViewTable(shift.getOrderHisPerShift());
    }

    private void realTimeClock() {
        new Thread() {
            @Override
            public void run() {
                try {
                    while (true) {
                        LocalDateTime curDateTime = LocalDateTime.now();
                        timeTextField.setText(curDateTime.format(DateTimeFormatter.ofPattern("h:mm:ss a")));
                        dateTextField.setText(curDateTime.format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
                        Thread.sleep(1000);
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(PurchasePanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }.start();
    }

    public void passData(Shift shift, History history, EmployeeList employeeList, Store myStore, IDGenerator idGenerator) {
        this.shift = shift;
        this.history = history;
        this.employeeList = employeeList;
        this.myStore = myStore;
        this.idgenerator = idGenerator;
        initVariables();
    }

    
//    private int goodsIDMaxSize = "Mã SP".length();
//    private int goodsNameMaxSize = "Tên SP".length();
//    private int manufactureMaxSize = "Nhà sx".length();
//    private int unitMaxSize = "ĐV".length();
//    private int listPrice = "Giá Bán/ĐV".length();
//    private int shipmentIDMaxSize = "Mã lô".length();
//    private int productionDateMaxSize = "Ngày sx".length();
//    private int expirationDateMaxSize = "Hạn SD".length();
//    private int shipmentQuantityMaxSize = "SL".length();
    private ShiftController shiftCtr;
    private OrderController orderCtr;
    private DefaultTableModel displayDetailModel;
    private DefaultTableModel overViewModel;
    private Shift shift;
    private History history;
    private EmployeeList employeeList;
    private Store myStore;
    private IDGenerator idgenerator;
    private final String OUTPUT_DATE_TIME_PATTERN = "dd/MM/yyyy HH:mm:ss";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel averagePerOrderLabel;
    private javax.swing.JTextField averagePerOrderTextField;
    private javax.swing.JLabel cashierPhoneNumLable;
    private javax.swing.JTextField cashierPhoneNumTextField;
    private javax.swing.JComboBox<String> cashierShiftComboBox;
    private javax.swing.JLabel cashierShiftLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JFormattedTextField dateTextField;
    private javax.swing.JScrollPane displayDetailJScrollPane;
    private javax.swing.JTable displayDetailTable;
    private javax.swing.JButton endShiftBtn;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JTextField fromTextField;
    private javax.swing.JLabel grossRevenueLabel;
    private javax.swing.JTextField grossRevenueTextField;
    private javax.swing.JButton intoShiftDetailBtn;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel netRevenueLabel;
    private javax.swing.JTextField netRevenueTextField;
    private javax.swing.JLabel numberOfOrderLabel;
    private javax.swing.JTextField numberOfOrderTextField;
    private javax.swing.JLabel openBalanceLabel;
    private javax.swing.JPanel openBalanceTextField;
    private javax.swing.JPanel orderAndShipsFlowBtn;
    private javax.swing.JLabel orderIDLabel;
    private javax.swing.JTextField orderIDTextField;
    private javax.swing.JPanel ordersAndShipsHistoryPanel;
    private javax.swing.JPanel otherFunctionPanel;
    private javax.swing.JPanel overViewPanel;
    private javax.swing.JTable overViewTable;
    private javax.swing.JScrollPane overViewTableJScrollPane;
    private javax.swing.JButton refreashBtn;
    private javax.swing.JPanel searchAndTablePanel;
    private javax.swing.JButton searchBtn;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JPanel shiftDetailPanel;
    private javax.swing.JComboBox<String> shiftEmployeeListComboBox;
    private javax.swing.JLabel shiftEmployeeListLabel;
    private javax.swing.JLabel shiftIDLabel;
    private javax.swing.JTextField shiftIDTextField;
    private javax.swing.JPanel shiftInforPanel;
    private javax.swing.JLabel surchargeLabel;
    private javax.swing.JTextField surchargeTextField;
    private javax.swing.JButton switchToOrderHistoryBtn;
    private javax.swing.JButton switchToShipmentHistoryBtn;
    private javax.swing.JLabel taxShiftLabel;
    private javax.swing.JTextField taxShiftTextField;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JFormattedTextField timeTextField;
    private javax.swing.JLabel toLabel;
    private javax.swing.JTextField toTextField;
    // End of variables declaration//GEN-END:variables
}
